BUILD.LIB.MK(5)           FreeBSD File Formats Manual          BUILD.LIB.MK(5)

[1mNAME[0m
     [1mbuild.lib.mk [22m-- bsdbuild - compilation of libraries

[1mSYNOPSIS[0m
     [1m.include <bsd.lib.mk>[0m

[1mDESCRIPTION[0m
     The [1mbuild.lib.mk [22mmodule compiles static and/or shared libraries from a
     set of source files.  For shared libraries, it uses a bundled copy of GNU
     libtool.  Currently, supported languages include:
     [1m+o   [22mC (*.c)
     [1m+o   [22mC++ (*.cc)
     [1m+o   [22mObjective C (*.m)
     [1m+o   [22mAssembler (*.asm)
     [1m+o   [22mLex (*.l)
     [1m+o   [22mYacc (*.y)

[1mTARGETS[0m
     [4mlib${LIB}.a[24m     Compile the source files into a static library.

     [4mlib${LIB}.la[24m    Compile the source files into static and shared libraries
                     using libtool (libtool comes bundled with BSDBuild).

     [4mclean-lib[24m       Clean up object and library files.

     [4mcleandir-lib[24m    Clean up for packaging.

     [4minstall-lib[24m     Install library files to the target installation direc-
                     tory (see csoft.common.mk(5)).

     [4mdeinstall-lib[24m   Uninstall libraries from the installation directory.

[1mVARIABLES[0m
     LIB              Name of target library.  Platform-specific transforms
                      will be applied to the name.

     LIBDIR           Target installation directory for libraries (usually set
                      by configure).

     LIB_INSTALL      If set to Yes, the [4minstall[24m target will install the
                      library files, otherwise it will be a no-op.  Defaults
                      to No.

     LIB_SHARED       If set to Yes, a shared library will be built.  Default
                      is No.

     LIB_MODULE       If set to Yes, a dlopen(3) compatible module will be
                      built.  Default is No.

     LIB_GUID         A Global Unique Identifier (GUID) for the library.
                      Exact interpretation is platform-specific.

     LIB_MAJOR        Major version number for shared libraries.

     LIB_MINOR        Minor version number for shared libraries.

     LIB_XOBJS        Extra object files to use in generating the library.

     LIBS             Other libtool-generated libraries (*.la) to include in
                      this library.

     USE_LIBTOOL      If set to Yes, use libtool(1) to build the libraries.
                      If set to No, generate the library using the traditional
                      method involving ar(1), ranlib(1), and [4m-fPIC[24m.

     LIBTOOL          Path to GNU libtool(1).  Usually set by configure script
                      (defaults to system libtool, or the bundled copy).

     LIBTOOLOPTS      Specify general libtool arguments (passed before
                      --mode).  Defaults to "--quiet".

     LIBTOOLOPTS_CC   Specify extra libtool arguments for C compilation.
                      Defaults to "" or "--tag=CC" depending on cc configure
                      test results.

     LIBTOOLOPTS_CXX  Specify extra libtool arguments for C++ compilation.
                      Defaults to "" or "--tag=CXX" depending on cxx configure
                      test results.

     LIBTOOLFLAGS     Specify extra compiler arguments when calling compiler
                      from libtool (passed after --mode).

     LTCONFIG_LOG     When using libtool, the output of the [4mltconfig[24m script
                      will be saved to this file.  Defaults to [4m./config.log[24m.

     CC               Compiler for C, C++ and Objective C sources.  Defaults
                      to the CC environment variable, or "cc".

     CFLAGS           Compiler flags for C sources.  Defaults to the CFLAGS
                      environment variable.

     CXXFLAGS         Compiler flags for C++ sources.  Defaults to the
                      CXXFLAGS environment variable.

     OBJCFLAGS        Compiler flags for Objective C sources.  Defaults to
                      `${CFLAGS}'.

     CPPFLAGS         Compiler preprocessor flags, for sources in all lan-
                      guages featuring a C preprocessor.

     ASM              Compiler for assembler sources.  Defaults to `nasm'.

     ASMFLAGS         Compiler flags for assembler.  Defaults to `-g
                      -w-orphan-labels'.

     LEX              Path to the lex(1) lexical analyzer generator.

     YACC             Path to the yacc(1) parser generator.

     LFLAGS           Options for lex(1), defaults to `'.

     YFLAGS           Options for yacc(1), defaults to `-d'.

     LIBL             Libraries to use for Lex lexers.  Defaults to `-ll'.

     WINDRES          (Specific to the win32 platform) Path to the windres(1)
                      utility, which generates windows resource files.

     WINRES           (Specific to the win32 platform) Resource file to use
                      with windres(1).

     DATAFILES        List of data files to install into ${DATADIR}.  The
                      files must have been generated from the build process
                      (i.e., if using a separate build with --srcdir, the
                      specified files must exist in the build directory).

     DATAFILES_SRC    Files to install into ${DATADIR}.  This variable is han-
                      dled similarly to DATAFILES, except that the specified
                      files must exist in the source directory.

     INCLDIR          Library header files will be installed into this direc-
                      tory.  See build.common.mk(5).

     INCL             List of library header files.

     CONFDIR          System-wide configuration files will be installed into
                      this directory.  It is usually set relative to
                      `${SYSCONFDIR}', for example `${SYSCONFDIR}/MyLibrary'.

     CONF             List of configuration files to install into ${CONFDIR}.
                      Note that the [4minstall[24m target will not override existing
                      configuration files, instead it will output a ``The
                      following configuration files have been preserved'' mes-
                      sage.

     CONF_OVERWRITE   Overwrite any existing configuration file on installa-
                      tion.  Default is "No".

[1mSEE ALSO[0m
     build.common.mk(5), build.prog.mk(5)

[1mHISTORY[0m
     [1mbuild.lib.mk [22mfirst appeared in BSDBuild 1.0.

     BSDBuild is based on the 4.4BSD build system.

FreeBSD 11.0                     July 18, 2007                    FreeBSD 11.0
